version: "3.7"

x-service-common:
  &service-common
  networks:
    default_net:
  restart: on-failure:3

services:
  zookeeper:
    <<: *service-common
    user: root
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "2181:2181" 
    container_name: zookeeper
    hostname: zookeeper
    volumes:
      - ./data/zookeeper:/tmp/zookeeper  
    environment:
      - KAFKA_HOME=${KAFKA_HOME}
    command: "${KAFKA_HOME}/bin/zookeeper-server-start.sh ${KAFKA_HOME}/config/zookeeper.properties"

  kafka-ui:
    <<: *service-common
    depends_on:
      - kafka
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9090:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  kafka:
    <<: *service-common
    image: docker.io/bitnami/kafka:3.6
    container_name: kafka  
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_HOME=${KAFKA_HOME}
    user: root
    volumes:
      - ./data/kafka_logs:/etc/logs
      - ./config/server.properties:${KAFKA_HOME}/config/server.properties:ro
    command: ${KAFKA_HOME}/bin/kafka-server-start.sh ${KAFKA_HOME}/config/server.properties
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server kafka:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka_broker_001:
    <<: *service-common
    image: docker.io/bitnami/kafka:3.6
    container_name: kafka_broker_001  
    hostname: kafka_broker_001
    environment:
      - KAFKA_HOME=${KAFKA_HOME}
    user: root
    volumes:
      - ./data/kafka_broker_001_logs:/etc/logs
      - ./config/server_001.properties:${KAFKA_HOME}/config/server.properties:ro
    command: ${KAFKA_HOME}/bin/kafka-server-start.sh ${KAFKA_HOME}/config/server.properties
    restart: always

    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server kafka_broker_001:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka_broker_002:
    <<: *service-common
    image: docker.io/bitnami/kafka:3.6
    container_name: kafka_broker_002  
    hostname: kafka_broker_002
    environment:
      - KAFKA_HOME=${KAFKA_HOME}
    user: root
    volumes:
      - ./data/kafka_broker_002_logs:/etc/logs
      - ./config/server_002.properties:${KAFKA_HOME}/config/server.properties:ro
    command: ${KAFKA_HOME}/bin/kafka-server-start.sh ${KAFKA_HOME}/config/server.properties
    restart: always

    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server kafka_broker_002:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-connect:
    <<: *service-common
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "8083:8083"
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server kafka:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - KAFKA_HOME=${KAFKA_HOME}
    volumes:
      - ./config/classicmodels_connector.properties:${KAFKA_HOME}/config/classicmodels_connector.properties:ro
      - ./config/server.properties:${KAFKA_HOME}/config/server.properties:ro
      - ./config/connect-standalone.properties:${KAFKA_HOME}/config/connect-standalone.properties:ro
      - ./jars/debezium-connector-mysql-3.0.0:${KAFKA_HOME}/libs/debezium-connector-mysql
      - ./jars/debezium-connector-sqlserver:${KAFKA_HOME}/libs/debezium-connector-sqlserver
    command: "${KAFKA_HOME}/bin/connect-standalone.sh ${KAFKA_HOME}/config/connect-standalone.properties ${KAFKA_HOME}/config/classicmodels_connector.properties"

volumes:
  broker:
   
networks:
  default_net:
    external: true
